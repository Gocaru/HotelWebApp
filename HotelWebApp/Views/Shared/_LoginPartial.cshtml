@using Microsoft.AspNetCore.Identity
@using HotelWebApp.Data.Entities

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User);
        var photoPath = !string.IsNullOrEmpty(user?.ProfilePictureUrl)
        ? $"~/images/profiles/{user.ProfilePictureUrl}"
        : "~/images/profiles/default.png";

        // Mover o link "Manage" e o botão "Logout" para o mesmo <li> para melhor alinhamento
        <li class="nav-item d-flex align-items-center">

            <a id="manage" class="nav-link text-dark d-flex align-items-center" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                <img src="@Url.Content(photoPath)" class="rounded-circle me-2" style="width:40px; height:40px; object-fit:cover;" asp-append-version="true" />

                @* Usar uma classe para esconder o nome em ecrãs pequenos se necessário *@
                <span class="d-none d-sm-inline">Hello @(user?.FullName ?? user?.UserName)!</span>
            </a>

            <form id="logoutForm" class="form-inline ms-2" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">Logout</button>
            </form>

        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
    </ul>
