@model IEnumerable<HotelWebApp.Data.Entities.Reservation>
@using HotelWebApp.Data.Entities

@{
    ViewData["Title"] = "Reservations Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>@ViewData["Title"]</h1>

@if (User.IsInRole("Employee"))
{
    <p>
        <a asp-action="Create" class="btn btn-primary mb-3">Create New Reservation</a>
    </p>
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}

<table class="table table-striped table-hover">
    <thead class="thead-dark">
        <tr>
            <th>Guest</th>
            <th>Room</th>
            <th>Check-in Date</th>
            <th>Check-out Date</th>
            <th>Status</th>
            <th style="width: 250px;">Actions</th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model.OrderBy(r => r.CheckInDate))
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.ApplicationUser.FullName)</td>
                <td>@Html.DisplayFor(modelItem => item.Room.RoomNumber)</td>
                <td>@item.CheckInDate.ToShortDateString()</td>
                <td>@item.CheckOutDate.ToShortDateString()</td>
                <td>
                    @{
                        // Lógica para definir a cor do badge com base no status
                        var badgeClass = "bg-secondary"; // Cor padrão
                        switch (item.Status)
                        {
                            case ReservationStatus.Confirmed:
                                badgeClass = "bg-primary";
                                break;
                            case ReservationStatus.CheckedIn:
                                badgeClass = "bg-success";
                                break;
                            case ReservationStatus.Cancelled:
                                badgeClass = "bg-danger";
                                break;
                            case ReservationStatus.CheckedOut:
                                badgeClass = "bg-dark";
                                break;
                        }
                    }
                    <span class="badge @badgeClass">@Html.DisplayFor(modelItem => item.Status)</span>
                </td>
                <td>
                    @* Botão de Check-in *@
                    @if (item.Status == ReservationStatus.Confirmed && item.CheckInDate.Date == DateTime.Today.Date)
                    {
                        <form asp-action="CheckIn" asp-route-id="@item.Id" method="post" class="d-inline">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-success btn-sm" title="Perform Check-in">
                                <i class="fas fa-sign-in-alt"></i> Check-in
                            </button>
                        </form>
                    }

                    @* Botão de Check-out *@
                    @if (item.Status == ReservationStatus.CheckedIn)
                    {
                        <form asp-action="CheckOut" asp-route-id="@item.Id" method="post" class="d-inline">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-primary btn-sm" title="Perform Check-out">
                                <i class="fas fa-sign-out-alt"></i> Check-out
                            </button>
                        </form>
                    }

                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm" title="Edit Reservation">
                        <i class="fas fa-edit"></i> Edit
                    </a>

                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm" title="View Details">
                        <i class="fas fa-info-circle"></i> Details
                    </a>

                    <form asp-action="Delete" asp-route-id="@item.Id" method="post" class="d-inline"
                          onsubmit="return confirm('Are you sure you want to delete this reservation?');">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-danger btn-sm" title="Delete Reservation">
                            <i class="fas fa-trash"></i> Delete
                        </button>
                    </form>

                </td>
            </tr>
        }
    </tbody>


</table>
