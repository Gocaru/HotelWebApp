@{
    ViewData["Title"] = "Reservation Schedule";
}

<h2>@ViewData["Title"]</h2>
<p>Reservation Schedule Overview</p>

@Html.AntiForgeryToken()

<div id="reservationScheduler"></div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {

            var antiForgeryToken = document.getElementsByName("__RequestVerificationToken")[0].value;

            var dataManager = new ej.data.DataManager({
                url: '@Url.Action("LoadSchedulerData", "Reservations")',
                removeUrl: '@Url.Action("DeleteEvent", "Reservations")',
                adaptor: new ej.data.UrlAdaptor(),
                headers: [{ "RequestVerificationToken": antiForgeryToken }]
            });

            var schedule = new ej.schedule.Schedule({
                height: '650px',
                currentView: 'Month',

                eventSettings: {
                    dataSource: dataManager,
                    fields: {
                        id: 'id',
                        subject: { name: 'subject' },
                        startTime: { name: 'startTime' },
                        endTime: { name: 'endTime' },
                        location: { name: 'location' },
                        description: { name: 'description' }
                    },
                    colorField: 'categoryColor'
                },

                // 1. Interceta o clique para ir para a página de Detalhes
                eventClick: function(args) {
                    args.cancel = true; // Impede o popup padrão de abrir

                    var reservationId = args.event.id;
                    var detailsUrl = '@Url.Action("Details", "Reservations")' +
                                     '/' + reservationId +
                                     '?source=schedule'; // <-- Passa a origem

                    window.location.href = detailsUrl;
                },

                // 2. Interceta a criação para ir para a página Create
                popupOpen: function(args) {
                    if (args.type === 'Editor') { // 'Editor' é para criar novos eventos
                        args.cancel = true; // Cancela o popup padrão

                        var startDate = args.data.startTime || args.data.StartTime;
                        var endDate = args.data.endTime || args.data.EndTime;

                        var formattedStartDate = startDate.toISOString().split('T')[0];
                        var formattedEndDate = endDate.toISOString().split('T')[0];

                        var createUrl = '@Url.Action("Create", "Reservations")' +
                                        '?checkInDate=' + formattedStartDate +
                                        '&checkOutDate=' + formattedEndDate +
                                        '&source=schedule'; // <-- Passa a origem

                        window.location.href = createUrl;
                    }
                },

                views: ['Day', 'Week', 'Month', 'Agenda']
            });

            schedule.appendTo('#reservationScheduler');
        });
    </script>
}





