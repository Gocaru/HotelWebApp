@model HotelWebApp.Models.ReservationDetailsViewModel
@using HotelWebApp.Data.Entities

@{
    ViewData["Title"] = "Reservation Details";
}

<h1>Details</h1>

@* Bloco de mensagens de sucesso/erro *@
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}

@if (Model.PendingChangeRequest != null && User.IsInRole("Employee"))
{
    <div class="alert alert-warning mb-4" role="alert">
        <h4 class="alert-heading"><i class="fas fa-exclamation-triangle"></i> Pending Change Request!</h4>
        <p>Guest <strong>@Model.Reservation.ApplicationUser.FullName</strong> has requested the following change:</p>
        <p class="mb-0"><em>"@Model.PendingChangeRequest.RequestDetails"</em></p>
        <hr>
        <p class="mb-0">To fulfill this request, please use the "Edit Reservation" button below. After making the changes, mark the request as completed.</p>
        <div class="mt-3">
            <form asp-action="ProcessChangeRequest" method="post" class="d-inline">
                @Html.AntiForgeryToken()
                <input type="hidden" name="requestId" value="@Model.PendingChangeRequest.Id" />
                <input type="hidden" name="newStatus" value="@RequestStatus.Approved" />
                <button type="submit" class="btn btn-success">Mark as Approved</button>
            </form>
            <form asp-action="ProcessChangeRequest" method="post" class="d-inline">
                @Html.AntiForgeryToken()
                <input type="hidden" name="requestId" value="@Model.PendingChangeRequest.Id" />
                <input type="hidden" name="newStatus" value="@RequestStatus.Rejected" />
                <button type="submit" class="btn btn-danger">Mark as Rejected</button>
            </form>
        </div>
    </div>
}


@* Bloco de informações da reserva *@
<div>
    <h4>Reservation Information</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">Guest</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.Reservation.ApplicationUser.FullName)</dd>

        <dt class="col-sm-2">Room Number</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.Reservation.Room.RoomNumber)</dd>

        <dt class="col-sm-2">Number of Guests</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.Reservation.NumberOfGuests)</dd>

        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Reservation.CheckInDate)</dt>
        <dd class="col-sm-10">@Model.Reservation.CheckInDate.ToString("dd/MM/yyyy HH:mm")</dd>

        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Reservation.CheckOutDate)</dt>
        <dd class="col-sm-10">@Model.Reservation.CheckOutDate.ToString("dd/MM/yyyy HH:mm")</dd>

        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Reservation.ReservationDate)</dt>
        <dd class="col-sm-10">@Model.Reservation.ReservationDate.ToString("dd/MM/yyyy HH:mm:ss")</dd>

        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Reservation.TotalPrice)</dt>
        <dd class="col-sm-10">@Model.Reservation.TotalPrice.ToString("C")</dd>

        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Reservation.Status)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.Reservation.Status)</dd>
    </dl>
</div>

<hr />
<h4 class="mt-4">Associated Services</h4>

@if (Model.Reservation.Status == ReservationStatus.Confirmed || Model.Reservation.Status == ReservationStatus.CheckedIn)
{
    <div class="card shadow-sm">
        <div class="card-body">
            @if (Model.Reservation.ReservationAmenities != null && Model.Reservation.ReservationAmenities.Any())
            {
                <table class="table table-hover mb-0">
                    <tbody>
                        @foreach (var item in Model.Reservation.ReservationAmenities)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.Amenity.Name)</td>
                                <td class="text-center">@Html.DisplayFor(modelItem => item.Quantity)</td>
                                <td class="text-end">@item.PriceAtTimeOfBooking.ToString("C")</td>
                                <td class="text-end">@((item.Quantity * item.PriceAtTimeOfBooking).ToString("C"))</td>
                                <td class="text-end">
                                    @if (User.IsInRole("Employee") || User.IsInRole("Admin"))
                                    {
                                        <form asp-action="RemoveAmenityFromReservation" method="post" onsubmit="return confirm('Are you sure you want to remove this amenity?');">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="reservationId" value="@Model.Reservation.Id" />
                                            <input type="hidden" name="reservationAmenityId" value="@item.Id" />
                                            <button type="submit" class="btn btn-danger btn-sm" title="Remove"><i class="fas fa-trash-alt"></i></button>
                                        </form>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan="4" class="text-end fw-bold">Amenities Total:</td>
                            <td class="text-end fw-bold">@Model.Reservation.ReservationAmenities.Sum(a => a.Quantity * a.PriceAtTimeOfBooking).ToString("C")</td>
                        </tr>
                    </tfoot>
                </table>
            }
            else
            {
                <p class="mb-0">No extra services have been added to this reservation yet.</p>
            }

            @if (User.IsInRole("Employee") || User.IsInRole("Admin"))
            {
                <hr />
                <h5>Add a New Service</h5>
                <form asp-action="AddAmenityToReservation" method="post" class="row gx-3 gy-2 align-items-center">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="reservationId" value="@Model.Reservation.Id" />
                </form>
            }
        </div>
    </div>
}
else
{
    <div class="alert alert-info" role="alert">
        <h5 class="alert-heading">Services Locked</h5>
        <p>Service management is disabled because the reservation status is '<strong>@Model.Reservation.Status</strong>'.</p>
    </div>
}


<div class="mt-3">
    @if (User.IsInRole("Employee"))
    {
        @if (Model.Reservation.Status == ReservationStatus.Confirmed || Model.Reservation.Status == ReservationStatus.CheckedIn)
        {
            <a asp-action="Edit" asp-route-id="@Model.Reservation.Id" class="btn btn-warning">Edit Reservation</a>
        }

        // Botão para ir diretamente para a fatura.
        // Isto dá ao funcionário a ação correta a tomar quando a reserva está CheckedOut.
        @if (Model.Reservation.Status == ReservationStatus.CheckedOut && Model.Reservation.Invoice != null)
        {
            <a asp-controller="Invoices" asp-action="Details" asp-route-id="@Model.Reservation.Invoice.Id" class="btn btn-primary">
                Process Payment
            </a>
        }

        <a asp-action="Index" class="btn btn-secondary">Back to Reservations List</a>
    }
    else if (User.IsInRole("Guest"))
    {
        <a asp-action="MyReservations" class="btn btn-secondary">Back to My Reservations</a>
    }
</div>