@model HotelWebApp.Models.ReservationDetailsViewModel
@using HotelWebApp.Data.Entities
@using HotelWebApp.Services

@{
    ViewData["Title"] = "Reservation Details";
}

<h1>Details</h1>

@* Bloco de mensagens de sucesso/erro *@
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}

@* Bloco de Pedido de Alteração Pendente (visível apenas para Funcionário) *@
@{
    var pendingRequest = Model.ChangeRequests?.FirstOrDefault(r => r.Status == RequestStatus.Pending);
}
@if (pendingRequest != null && User.IsInRole("Employee"))
{
    <div class="alert alert-warning mb-4" role="alert">
        <h4 class="alert-heading"><i class="fas fa-exclamation-triangle"></i> Pending Change Request!</h4>
        <p>Guest <strong>@Model.Reservation.ApplicationUser.FullName</strong> has requested the following change:</p>
        <p class="mb-0"><em>"@pendingRequest.RequestDetails"</em></p>
        <hr>
        <p class="mb-0">To process this request, please add any relevant notes below and then approve or reject.</p>

        <form asp-action="ProcessChangeRequest" method="post" class="mt-3">
            @Html.AntiForgeryToken()
            <input type="hidden" name="requestId" value="@pendingRequest.Id" />

            <div class="form-group mb-2">
                <label for="employeeNotes" class="form-label">Notes (optional, visible to the guest):</label>
                <textarea name="employeeNotes" class="form-control" rows="2"></textarea>
            </div>

            <div>
                <button type="submit" name="newStatus" value="@RequestStatus.Approved" class="btn btn-success">Approve Request</button>
                <button type="submit" name="newStatus" value="@RequestStatus.Rejected" class="btn btn-danger">Reject Request</button>
            </div>
        </form>
    </div>
}


@* Bloco de informações da reserva *@
<div>
    <h4>Reservation Information</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">Guest</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.Reservation.ApplicationUser.FullName)</dd>

        <dt class="col-sm-2">Room Number</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.Reservation.Room.RoomNumber)</dd>

        <dt class="col-sm-2">Number of Guests</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.Reservation.NumberOfGuests)</dd>

        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Reservation.CheckInDate)</dt>
        <dd class="col-sm-10">@Model.Reservation.CheckInDate.ToString("dd/MM/yyyy HH:mm")</dd>

        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Reservation.CheckOutDate)</dt>
        <dd class="col-sm-10">@Model.Reservation.CheckOutDate.ToString("dd/MM/yyyy HH:mm")</dd>

        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Reservation.ReservationDate)</dt>
        <dd class="col-sm-10">@Model.Reservation.ReservationDate.ToString("dd/MM/yyyy HH:mm:ss")</dd>

        @if (Model.Reservation.Status == ReservationStatus.NoShow)
        {
            <dt class="col-sm-2">Original Price</dt>
            <dd class="col-sm-10"><del>@Model.Reservation.TotalPrice.ToString("C")</del></dd>

            <dt class="col-sm-2 text-danger"><strong>No-Show Fee</strong></dt>
            <dd class="col-sm-10 text-danger"><strong>@Model.Reservation.Room.PricePerNight.ToString("C")</strong></dd>
        }
        else
        {
            <dt class="col-sm-2">Total Price</dt>
            <dd class="col-sm-10">@Model.Reservation.TotalPrice.ToString("C")</dd>
        }

        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Reservation.Status)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.Reservation.Status)</dd>
    </dl>
</div>

<hr />

<h4 class="mt-4">Associated Services</h4>

@if (User.IsInRole("Employee"))
{
    @if (Model.Reservation.Status == ReservationStatus.Confirmed || Model.Reservation.Status == ReservationStatus.CheckedIn)
    {
        <div class="card shadow-sm">
            <div class="card-body">
                @if (Model.Reservation.ReservationAmenities != null && Model.Reservation.ReservationAmenities.Any())
                {
                    <h5>Current Services</h5>
                    <table class="table table-hover mb-4">
                        <thead>
                            <tr>
                                <th>Service</th>
                                <th class="text-center">Quantity</th>
                                <th class="text-end">Price (Unit)</th>
                                <th class="text-end">Price (Total)</th>
                                <th></th> <!-- Coluna para o botão de apagar -->
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Reservation.ReservationAmenities)
                            {
                                <tr>
                                    <td>@item.Amenity.Name</td>
                                    <td class="text-center">@item.Quantity</td>
                                    <td class="text-end">@item.PriceAtTimeOfBooking.ToString("C")</td>
                                    <td class="text-end">@((item.Quantity * item.PriceAtTimeOfBooking).ToString("C"))</td>
                                    <td class="text-end">
                                        <form asp-action="RemoveAmenityFromReservation" method="post" onsubmit="return confirm('Are you sure?');">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="reservationId" value="@Model.Reservation.Id" />
                                            <input type="hidden" name="reservationAmenityId" value="@item.Id" />
                                            <input type="hidden" name="source" value="@ViewBag.Source" />
                                            <button type="submit" class="btn btn-danger btn-sm" title="Remove">
                                                <i class="fas fa-trash-alt"></i>
                                            </button>
                                        </form>
                                    </td>
                                </tr>
                            }
                        </tbody>
                        <tfoot>
                            <tr>
                                <td colspan="4" class="text-end fw-bold">Amenities Total:</td>
                                <td class="text-end fw-bold">
                                    @Model.Reservation.ReservationAmenities.Sum(a => a.Quantity * a.PriceAtTimeOfBooking).ToString("C")
                                </td>
                            </tr>
                        </tfoot>
                    </table>
                }
                else
                {
                    <p class="mb-0">No extra services have been added to this reservation yet.</p>
                }
                <hr />

                <h5>Add a New Service</h5>
                <form asp-action="AddAmenityToReservation" method="post" class="row gx-3 gy-2 align-items-center">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="reservationId" value="@Model.Reservation.Id" />
                    <input type="hidden" name="source" value="@ViewBag.Source" />

                    <div class="col-sm-6">
                        <label class="visually-hidden" for="amenityId">Service</label>
                        <select name="amenityId" class="form-select" asp-items="ViewBag.Amenities" required>
                            <option value="">-- Select a Service --</option>
                        </select>
                    </div>

                    <div class="col-sm-3">
                        <label class="visually-hidden" for="quantity">Quantity</label>
                        <input type="number" name="quantity" class="form-control" placeholder="Quantity" value="1" min="1" required />
                    </div>

                    <div class="col-auto">
                        <button type="submit" class="btn btn-primary">Add Service</button>
                    </div>
                </form>
            </div>
        </div>
    }
    else
    {

        <div class="alert alert-secondary" role="alert">
            <h5 class="alert-heading"><i class="fas fa-lock"></i> Service Management</h5>
            <p>Services cannot be added or modified because this reservation is marked as '<strong>@Model.Reservation.Status.GetDisplayName()</strong>'.</p>
        </div>


    }
}

@if (User.IsInRole("Guest"))
{
    @if (Model.Reservation.Status != ReservationStatus.NoShow && Model.Reservation.Status != ReservationStatus.Cancelled)
    {
        <div class="card shadow-sm">
            <div class="card-body">
                @if (Model.Reservation.ReservationAmenities != null && Model.Reservation.ReservationAmenities.Any())
                {
                    <p>The following services are included in your reservation:</p>
                    <ul class="list-group list-group-flush">
                        @foreach (var item in Model.Reservation.ReservationAmenities)
                        {
                            @if (item.Amenity != null)
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    @item.Amenity.Name (x @item.Quantity)
                                    <span class="badge bg-primary rounded-pill">@((item.Quantity * item.PriceAtTimeOfBooking).ToString("C"))</span>
                                </li>
                            }
                        }
                    </ul>
                }
                else
                {
                    <p>No extra services have been added to this reservation.</p>
                }
            </div>
        </div>
    }
    else
    {
        <div class="alert alert-warning">
            Associated services are not applicable for a reservation with status '<strong>@Model.Reservation.Status.GetDisplayName()</strong>'.
        </div>
    }
}


<div class="mt-3">
    @if (User.IsInRole("Employee"))
    {
        @if (Model.Reservation.Status == ReservationStatus.Confirmed || Model.Reservation.Status == ReservationStatus.CheckedIn)
        {
            <a asp-action="Edit" asp-route-id="@Model.Reservation.Id" asp-route-source="@ViewBag.Source" class="btn btn-warning">Edit Reservation</a>
        }
        @if (Model.Reservation.Status == ReservationStatus.CheckedOut && Model.Reservation.Invoice != null)
        {
            <a asp-controller="Invoices" asp-action="Details" asp-route-id="@Model.Reservation.Invoice.Id" class="btn btn-primary">
                Process Payment
            </a>
        }
        @if (ViewBag.Source == "dashboard")
        {
            <a asp-controller="Home" asp-action="Index" class="btn btn-secondary">Back to Dashboard</a>
        }
        else if (ViewBag.Source == "schedule")
        {
            <a asp-controller="Reservations" asp-action="Schedule" class="btn btn-secondary">Back to Schedule</a>
        }
        else
        {
            <a asp-action="Index" class="btn btn-secondary">Back to Reservations List</a>
        }
    }

    @if (User.IsInRole("Guest"))
    {
        <a asp-action="MyReservations" class="btn btn-secondary">Back to My Reservations</a>
    }
</div>